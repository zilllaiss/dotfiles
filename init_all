#!/usr/bin/env bash

source ./init_basic

set -euo pipefail

echo "initializing all components..."

amd64_install() {
    # nothing to do right now
    echo "no additional softwares for x86_64"
}

arch_main_install() {
    pacman -S --noconfirm --needed --disable-download-timeout eza trash-cli python-shtab neovim \
        fd ripgrep jq git-delta lazygit bat

    pacman -S --noconfirm --needed --disable-download-timeout kolourpaint \
        libreoffice-fresh filelight keepassxc kdeconnect  \
        kclock kjournald khelpcenter pdfarranger krdc krfb systemdgenie ffmpegthumbs \
        xdg-desktop-portal-gtk kcron flatpak-kcm sshfs kweather \
        kcharselect quodlibet plasma-workspace-wallpapers bleachbit ttf-jetbrains-mono \
		ttf-jetbrains-mono-nerd drkonqi

    amd64_install

    sed -i 's/^#Color.*/Color/' "/etc/pacman.conf"

    # this makes GTK apps listen to portal settings, like using Dolphin for filepicker,
    # using KDE font settings, etc.
    if ! grep GTK_USE_PORTAL /etc/environment &> /dev/null; then 
        bash -c 'echo GTK_USE_PORTAL=1 >> /etc/environment'
    fi

    if ! grep GSK_RENDERER /etc/environment; then 
        # GTK has rendering problem in low-end computers as it uses Vulkan now
        read -p "Do you want to use OpenGL for rendering GTK apps? (RECOMMENDED)
        You can always turn it off by deleting GSK_RENDERER=gl in /etc/environment.
        Answer (y/N): " glopt

        if [[ $glopt == y ]]; then
            bash -c 'echo GSK_RENDERER=gl >> /etc/environment'
        fi
    fi

    # for kde connect
    ufw allow 1716:1764/udp
    ufw allow 1716:1764/tcp

    # for timeshift scheduler. I'm commenting it out for now as for some reason snapshots created by
    # the scheduler is corrupt and it once broke my system
    # UPDATE: let's try whether installing grub-btrfs will change this
    systemctl enable --now cronie

    sed -i 's/^ExecStart.*/ExecStart=\/usr\/bin\/grub-btrfsd --syslog -t/' \
        "/etc/systemd/system/grub-btrfsd.service"
}

flatpak_basic() {
    if ! command -v flatpak &> /dev/null; then 
        echo "please install flatpak first then re-log in"
        return
    fi

    flatpak install -y io.github.flattool.Warehouse com.github.tchx84.Flatseal \
        org.localsend.localsend_app org.freefilesync.FreeFileSync ca.desrt.dconf-editor

    # NOTE: installing both flatpak-kcm and flatseal seems redundant,
    # but currently you can't set global setting for apps in flatpak-kcm.
    # That seems flatseal is the way to go, but I like how flatpak-kcm
    # integrates well with the system-settings.
}

if ! command -v oh-my-posh &> /dev/null; then 
    read -p 'do you want to install oh-my-posh (for shell customization)? (y/N)' answer

    if [[ $answer == y ]]; then
        curl -s https://ohmyposh.dev/install.sh | bash -s -- -d $CUSTOM_BIN
    fi
fi

case "$DISTRO_ID" in
termux)
    pkg install eza jq lazygit neovim oh-my-posh git-delta
    ;;

arch)
    arch_main_install
    flatpak_basic
    ;;

cachyos)
    arch_main_install
    flatpak_basic
    ;;

fedora)
    dnf copr enable atim/lazygit -y
    dnf install -y eza jq lazygit neovim git-delta keepassxc timeshift kalk kclock krecorder \
        kcron kweather qmmp

    read -p "do you want to uninstall some redundant apps? [y/N]" remren
    if [[ $remren == y ]]; then 
        dnf remove -y dragon kcalc
    fi

    amd64_install
    ;;

ubuntu)
    apt install eza jq trash-cli neovim
    amd64_install

    # lazygit
    LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" \
        | grep -Po '"tag_name": "v\K[^"]*')

    curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
    tar xf lazygit.tar.gz lazygit
    install lazygit $CUSTOM_BIN
    ;;

linuxmint) ;;

esac

echo "all components are successfully installed"
