export EDITOR=nano


if command -v vim &> /dev/null; then
	export EDITOR=vim
fi

export LF_BOOKMARK_PATH=~/.cache/lf/bookmarks
if [ ! -d $LF_BOOKMARK_PATH ]; then
	mkdir -p $LF_BOOKMARK_PATH
fi

export CUSTOM_BIN=~/.local/bin
export MANPAGER="nvim +Man!"

# path
export PATH=$PATH:~/go/bin
export PATH=$PATH:/usr/local/go/bin
export PATH=$PATH:~/.bun/bin
export PATH=$PATH:$CUSTOM_BIN
export PATH=$PATH:$CUSTOM_BIN/paru
export PATH=$PATH:~/bin/nvim/bin
export PATH=$PATH:~/zig

# aliases
alias v=vim
alias ve="vim -y" # working with (natural) languages with non-ascii characters like JP & AR is a nightmare in vim 
alias nv=nvim
alias hx=helix
alias zlf="~/zlf.sh"
alias q=exit
alias yz=yazi
alias cl=clear
alias brc="$EDITOR ~/.bashrc"
alias zrc="$EDITOR ~/.zshrc"
alias zlrc="$EDITOR ~/.zl_profile"
alias termmode="sudo systemctl isolate multi-user.target"
alias graphmode="sudo systemctl isolate graphical.target"
alias tmuxpi="git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm"
alias code=codium
alias grep="grep --color=always"
alias stow="stow --no-folding"
alias lg=lazygit
alias wrk=go-wrk

if command -v trash &> /dev/null
then 
	alias rm=trash
	alias rml=trash-list
	alias rmrf=trash-empty
	alias rmres=trash-restore
	alias rmr=trash-rm
fi

if command -v yt-dlp_linux &> /dev/null
then
	alias yt-dlp=yt-dlp_linux
fi

if command -v bat &> /dev/null
then
	# additionally, you might want to edit /etc/pacman.conf if you use Arch (btw) to enable paru color support
	alias cat="bat --paging never"
fi

if command -v lsd &> /dev/null
then
	alias ls="lsd --group-dirs first"
	alias lsa="lsd -la"
	alias lst="lsd -ltr"
	alias lss="lsd -lSr"
fi

if command -v go-task &> /dev/null
then
	alias task=go-task
fi

# kitty-specific
alias icat="kitty +kitten icat"

# other variable exports
export WWW_HOME="www.duckduckgo.com"

# export FZF_DEFAULT_OPTS='--bind "ctrl-y:execute-silent(printf {} | cut -f 2- | wl-copy --trim-newline)"'
export FZF_DEFAULT_OPTS="
	--bind 'ctrl-e:become(echo {+} | xargs -o $EDITOR)'
	--bind 'ctrl-o:become(xdg-open {})'
	--bind 'ctrl-l:become(readlink -f {} | wl-copy && echo item\ copied\ to\ clipboard)'	
	--bind 'ctrl-y:execute(readlink -f {} | wl-copy && echo item\ copied\ to\ clipboard)'	
	--bind '?:toggle-preview'
"
# loading nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

# functions

# I mostly don't use this, but it's still here for the switch case syntax
# as I often forget about it
list() {
    case "$1" in
        size)
            lsd -arlS ;;
        time)
            lsd -arlt ;;
        *)
            lsd -al ;;
    esac
}

cpr () {
	rsync --archive -v --chown=$USER:$USER $1 $2 
}

reload () {
    CUR_SHELL=$(basename $SHELL)

    case "$CUR_SHELL" in
    zsh)
        source ~/.zshrc
		;;
    bash)
        source ~/.bashrc
        ;;
    esac 
}

# lfcd () {
lf () {
    # `command` is needed in case `lfcd` is aliased to `lf`
    cd "$(command lf -print-last-dir "$@")"
}

if command -v yazi &> /dev/null
then
	alias lf=yazi
fi

yy() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

# find inside files
fif () {
	find . -type f -exec grep --color=always -H $1 {} \;
}

# this is just a function which extend fzf bindings so it wouldn't conflict with apps that use the original bindings
f () {
	fzf --bind 'enter:become(readlink -f {} | wl-copy && echo "item copied to the clipboard")'
}

stop () {
	sleep $2 && kill $(pgrep $1)
}

# fedora
rpml () {
	rpm -qa | grep -E  $1 | sort
}

gccb () {
	if [ ! -d "bin" ]; then
		mkdir bin
	fi
    
	gcc -o bin/cmd $1
}

gitcount() {
	git ls-files | xargs wc -l
}

gb () { 
	local goname=

	if [ -z $1 ]; then
		goname=cmd
	else
		goname=$1
	fi

	go build -o ./bin/$goname 
}

pacr () {
	sudo pacman -Rns $(pacman -Qdtq)
}

# I know you can define global ignore (which I already did), but better do this as well to avoid my own absentmindedness
initpro () {
	git init
	printf ".env \n.ps \nbin \ntmp \ntemp" >> .gitignore
}


# For Termux
# export DISPLAY=":1"

# install RealVNC from appstore first
# follow the tutorial here https://wiki.termux.com/wiki/Graphical_Environment
alias vnc="vncserver -localhost"

pg () {
		# start or stop
		pg_ctl -D $PREFIX/var/lib/postgresql $1
}

pqstart () {
        pg_ctl -D /var/lib/postgres/data -l logfile start
}

